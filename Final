#include <stdio.h>

void insert_element(int arr[], int size, int element) {
    arr[size] = element;
}

void delete_element(int arr[], int size, int element) {
    int i, found = 0;
    for (i = 0; i < size; i++) {
        if (arr[i] == element) {
            found = 1;
            break;
        }
    }
    if (found) {
        for (; i < size - 1; i++) {
            arr[i] = arr[i+1];
        }
    } else {
        printf("Element not found in array\n");
    }
}

void search_element(int arr[], int size, int element) {
    int i, found = 0;
    for (i = 0; i < size; i++) {
        if (arr[i] == element) {
            found = 1;
            printf("Element found in array at index: %d\n", i);
            break;
        }
    }
    if (!found) {
        printf("Element not found in array\n");
    }
}

void sort_array(int arr[], int size) {
    int i, j, temp;
    for (i = 0; i < size - 1; i++) {
        for (j = i+1; j < size; j++) {
            if (arr[i] > arr[j]) {
                temp = arr[i];
                arr[i] = arr[j];
                arr[j] = temp;
            }
        }
    }
}

int main() {
    int my_array[10] = {3, 6, 1, 9, 2, 8};
    int size = 6;
    int element;

    printf("Original array: ");
    for (int i = 0; i < size; i++) {
        printf("%d ", my_array[i]);
    }
    printf("\n");

    // Insert element
    element = 5;
    insert_element(my_array, size, element);
    size++;
    printf("Array after inserting %d: ", element);
    for (int i = 0; i < size; i++) {
        printf("%d ", my_array[i]);
    }
    printf("\n");

    // Delete element
    element = 1;
    delete_element(my_array, size, element);
    size--;
    printf("Array after deleting %d: ", element);
    for (int i = 0; i < size; i++) {
        printf("%d ", my_array[i]);
    }
    printf("\n");

    // Search element
    element = 9;
    search_element(my_array, size, element);

    // Sort array
    sort_array(my_array, size);
    printf("Sorted array: ");
    for (int i = 0; i < size; i++) {
        printf("%d ", my_array[i]);
    }
    printf("\n");

    return 0;
}
